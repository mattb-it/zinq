<?php

declare(strict_types=1);

namespace {{NAMESPACE}};

use App\Models\User;
use Illuminate\Auth\Events\PasswordReset;
use Illuminate\Container\Attributes\RouteParameter;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Password;
use Illuminate\Support\Str;
use Illuminate\View\View;
use Livewire\Attributes\Locked;
use Livewire\Attributes\Validate;
use Livewire\Component;
use Mattbit\Zinq\Facades\Zinq;

class ResetPassword extends Component
{
    #[Validate(['required', 'min:6'])]
    public string $password;

    #[Locked]
    public string $email;
    #[Locked]
    public string $token;

    public function mount(
        #[RouteParameter('token')] string $token,
        #[RouteParameter('email')] string $email,
    ): void
    {
        $this->token = $token;
        $this->email = $email;
    }

    public function update(): void
    {
        $this->validate();

        $status = Password::reset(
            ['email' => $this->email, 'password' => $this->password, 'password_confirmation' => $this->password, 'token' => $this->token],
            function (User $user, string $password) {
                $user->forceFill([
                    'password' => Hash::make($password)
                ])->setRememberToken(Str::random(60));

                $user->save();

                event(new PasswordReset($user));
            }
        );

        if ($status === Password::PASSWORD_RESET) {
            Zinq::toastSuccess('Password has been reset. Now you can login with your new password.');
            $this->redirectRoute('login', navigate: true);
        } else {
            $this->addError('password', __($status));
        }
    }

    public function render(): View
    {
        return view('livewire.auth.reset-password')
            ->extends('vendor.zinq.layouts.authentication')
            ->section('content');
    }
}
