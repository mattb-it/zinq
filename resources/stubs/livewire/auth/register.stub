<?php

declare(strict_types=1);

namespace {{NAMESPACE}};

use App\Models\User;
use Illuminate\Contracts\Auth\MustVerifyEmail;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\URL;
use Illuminate\Support\Str;
use Illuminate\View\View;
use Livewire\Attributes\Validate;
use Livewire\Component;

class Register extends Component
{
    #[Validate(['required', 'email', 'unique:users,email'])]
    public string $email;
    #[Validate(['required', 'string', 'max:255'])]
    public string $name;
    #[Validate(['required', 'min:8'])]
    public string $password;

    public function register(): void
    {
        $this->validate();

        $user = new User;
        $user->email = $this->email;
        $user->name = $this->name;
        $user->password = Hash::make($this->password);
        $user->save();

        if ($user instanceof MustVerifyEmail) {
            $user->sendEmailVerificationNotification();

            $verifyEmailUrl = url(URL::temporarySignedRoute(
                'verification.notice',
                now()->addMinutes(60),
                ['email' => $this->email],
                false,
            ));
            $this->redirect($verifyEmailUrl, navigate: true);
        } else {
            $this->redirect(route('login'));
        }
    }

    public function render(): View
    {
        return view('livewire.auth.register')
            ->extends('vendor.zinq.layouts.authentication')
            ->section('content');
    }
}
